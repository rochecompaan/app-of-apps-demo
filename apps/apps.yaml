---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  project: default
  source:
    chart: argo-cd
    repoURL: https://argoproj.github.io/argo-helm
    targetRevision: 5.51.1
    helm:
      releaseName: argocd
      # https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#traefik-v22
      valuesObject:
        configs:
          params:
            server.insecure: true
  destination:
    server: "https://kubernetes.default.svc"
    namespace: argocd
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: sealed-secrets
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  project: default
  source:
    chart: sealed-secrets
    repoURL: https://bitnami-labs.github.io/sealed-secrets
    targetRevision: 2.13.2
    helm:
      releaseName: sealed-secrets
      parameters:
      - name: "fullnameOverride"
        value: sealed-secrets-controller
  destination:
    server: "https://kubernetes.default.svc"
    namespace: kube-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  project: default
  source:
    chart: traefik
    repoURL: https://traefik.github.io/charts 
    targetRevision: 25.0.0
    helm:
      releaseName: traefik
      parameters:
      - name: "service.type"
        value: NodePort
      - name: "ports.web.nodePort"
        value: "30080"
      - name: "ports.websecure.nodePort"
        value: "30443"
      - name: "deployment.kind"
        value: DaemonSet
  destination:
    server: "https://kubernetes.default.svc"
    namespace: kube-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
# ---
# apiVersion: argoproj.io/v1alpha1
# kind: Application
# metadata:
#   name: cert-manager
#   namespace: argocd
#   annotations:
#     argocd.argoproj.io/sync-wave: "0"
# spec:
#   project: default
#   source:
#     chart: cert-manager
#     repoURL: https://charts.jetstack.io
#     targetRevision: v1.13.2 
#     helm:
#       releaseName: cert-manager
#       parameters:
#       - name: "installCRDs"
#         value: "true"
#   destination:
#     server: "https://kubernetes.default.svc"
#     namespace: cert-manager
#   syncPolicy:
#     automated:
#       prune: true
#       selfHeal: true
#     retry:
#       limit: 5
#       backoff:
#         duration: 5s
#         factor: 2
#         maxDuration: 3m
#     syncOptions:
#       - CreateNamespace=true
# ---
# apiVersion: argoproj.io/v1alpha1
# kind: Application
# metadata:
#   name: cloudnative-pg
#   namespace: argocd
#   annotations:
#     argocd.argoproj.io/sync-wave: "0"
# spec:
#   project: default
#   source:
#     chart: cloudnative-pg
#     repoURL: https://cloudnative-pg.github.io/charts
#     targetRevision: v0.19.1
#     helm:
#       releaseName: cloudnative-pg
#       parameters:
#       - name: "fullnameOverride"
#         value: "cnpg-controller-manager"
#   destination:
#     server: "https://kubernetes.default.svc"
#     namespace: cnpg-system
#   syncPolicy:
#     automated:
#       prune: true
#       selfHeal: true
#     retry:
#       limit: 5
#       backoff:
#         duration: 5s
#         factor: 2
#         maxDuration: 3m
#     syncOptions:
#       - CreateNamespace=true
# ---
# apiVersion: argoproj.io/v1alpha1
# kind: Application
# metadata:
#   name: reflector
#   namespace: argocd
#   annotations:
#     argocd.argoproj.io/sync-wave: "0"
# spec:
#   project: default
#   source:
#     chart: reflector
#     repoURL: https://emberstack.github.io/helm-charts
#     targetRevision: 7.1.216 
#     helm:
#       releaseName: reflector
#   destination:
#     server: "https://kubernetes.default.svc"
#     namespace: kube-system
#   syncPolicy:
#     automated:
#       prune: true
#       selfHeal: true
#     retry:
#       limit: 5
#       backoff:
#         duration: 5s
#         factor: 2
#         maxDuration: 3m
# ---
# apiVersion: argoproj.io/v1alpha1
# kind: Application
# metadata:
#   name: docker-registry
#   namespace: argocd
#   annotations:
#     argocd.argoproj.io/sync-wave: "0"
# spec:
#   project: default
#   source:
#     chart: docker-registry
#     repoURL: https://helm.twun.io
#     targetRevision: 2.2.2
#     helm:
#       releaseName: docker-registry
#       valuesObject:
#         replicaCount: 1
#         host: acr.agibase.com
#         namespace: docker-registry
#         persistence:
#           enabled: true
#           size: 10Gi
#           deleteEnabled: true
#           storageClass: openebs-hostpath
#   destination:
#     server: "https://kubernetes.default.svc"
#     namespace: docker-registry
#   syncPolicy:
#     automated:
#       prune: true
#       selfHeal: true
#     retry:
#       limit: 5
#       backoff:
#         duration: 5s
#         factor: 2
#         maxDuration: 3m
#     syncOptions:
#       - CreateNamespace=true
# ---
# apiVersion: argoproj.io/v1alpha1
# kind: Application
# metadata:
#   name: docker-registry-ui
#   namespace: argocd
#   annotations:
#     argocd.argoproj.io/sync-wave: "0"
# spec:
#   project: default
#   source:
#     chart: docker-registry-ui
#     repoURL: https://helm.joxit.dev
#     targetRevision: 1.1.3
#     helm:
#       releaseName: docker-registry-ui
#       valuesObject:
#         global:
#           name: docker-registry
#         ui:
#           title: Agibase Image Registry
#           proxy: true
#           dockerRegistryUrl: http://docker-registry:5000
#           deleteImages: true
#           ingress:
#             enabled: false
#   destination:
#     server: "https://kubernetes.default.svc"
#     namespace: docker-registry
#   syncPolicy:
#     automated:
#       prune: true
#       selfHeal: true
#     retry:
#       limit: 5
#       backoff:
#         duration: 5s
#         factor: 2
#         maxDuration: 3m
#     syncOptions:
#       - CreateNamespace=true
